<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd ">
    
    <import resource="applicationContext-dao.xml"/>
    <import resource="applicationContext-service.xml"/>
    
   		<!-- 数据源的相关配置 -->
      <context:property-placeholder location="classpath:database.properties" />
      <!-- 获取数据源（使用dbcp连接池） -->
      <!-- 配置数据源 :JNDI获取数据源（使用dbcp连接池）-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
    	destroy-method="close" scope="singleton">
    	<property name="driverClassName" value="${jdbc.driver}"></property>
    	<property name="url" value="${jdbc.url}"></property>
    	<property name="username" value="${jdbc.username}"></property>
    	<property name="password" value="${jdbc.password}"></property>
    	<property name="initialSize" value="${initialSize}"></property>
    	<property name="maxActive" value="${maxActive}"></property>
    	<property name="maxIdle" value="${maxIdle}"></property>
    	<property name="minIdle" value="${minIdle}"></property>
    	<property name="maxWait" value="${maxWait}"></property>
    	<!--  -->
    	<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"></property>
    	<property name="removeAbandoned" value="${removeAbandoned}"></property>
    	<!-- sql心跳 -->
    	<property name="testWhileIdle" value="true"></property>
    	<property name="testOnBorrow" value="false"></property>
    	<property name="testOnReturn" value="false"></property>
    	<property name="validationQuery" value="select 1"></property>
    	<property name="timeBetweenEvictionRunsMillis" value="60000"></property>
    	<property name="numTestsPerEvictionRun" value="${maxActive}"></property>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      	<property name="dataSource" ref="dataSource" />
      </bean>
      <!-- AOP事务处理 -->
      <aop:aspectj-autoproxy />
      <aop:config proxy-target-class="true">
      	<aop:pointcut expression="execution(* *cn.smbms.service..*(..))" id="transService"/>
      	<aop:advisor pointcut-ref="transService" advice-ref="txAdvice" />
      </aop:config>
      <tx:advice id="txAdvice" transaction-manager="transactionManager">
      	<tx:attributes>
      		<tx:method name="smbms*" propagation="REQUIRED" rollback-for="Exception"/>
      	</tx:attributes>
      </tx:advice>
 <!-- 配置MyBatis的SqlSessionFactoryBean -->
      <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      	<property name="dataSource" ref="dataSource" />
      	<property name="configLocation" value="classpath:mybatis-config.xml" />
      </bean>
 <!-- 配置MyBatis的MapperScannerConfigurer -->
      <!-- 在Spring容器中注册MapperScannerConfigurer，
      并注入Mapper接口所在包名，Spring自动会查找其下所有的Mapper，
      并自动注册Mapper对应的MapperFactoryBean对象 -->
      <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      	<property name="basePackage" value="cn.smbms.dao" />
      </bean>
    
    
    <!-- 启动注解配置事务的支持 -->
    <!-- <tx:annotation-driven transaction-manager="txManager"/>	 -->
    
</beans>